<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Gráficas con SVG</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
</head>
<body>

    <div class="menu-container">
        <div class="controls">
            <h1>Opciones</h1>
            <input type="file" id="fileInput" accept=".json">
            <p id="error" style="color: red; text-align: center;"></p>

            <!-- Menú desplegable para seleccionar etiquetas y valores -->
            <label for="labelSelect">Selecciona el valor para las etiquetas:</label>
            <select id="labelSelect">
                <option value="">--Seleccione una clave--</option>
            </select>

            <label for="valueSelect">Selecciona el valor para las claves:</label>
            <select id="valueSelect">
                <option value="">--Seleccione una clave--</option>
            </select>

            <!-- Opción para seleccionar la orientación de las barras -->
            <div id="orientationContainer">
                <label>Orientación:</label>
                <div>
                    <label>
                        <input type="radio" name="orientation" value="vertical" checked>
                        Vertical
                    </label>
                    <label>
                        <input type="radio" name="orientation" value="horizontal">
                        Horizontal
                    </label>
                </div>
            </div>

            <!-- Menú para seleccionar el tipo de gráfico -->
            <label for="chartType">Selecciona el tipo de gráfica:</label>
            <select id="chartType">
                <option value="bar">Barras</option>
                <option value="line">Líneas</option>
                <option value="pie">Pastel</option>
                <option value="radar">Radar</option> <!-- Añadir opción de Radar -->
            </select>
        </div>
    </div>

    <div class="chart-container">
        <div id="chart">
            <!-- Aquí se renderiza el gráfico SVG -->
        </div>
    </div>

    <script type="module">
        import SVGGraph from './svgGraph.js';

        const fileInput = document.getElementById('fileInput');
        const labelSelect = document.getElementById('labelSelect');
        const valueSelect = document.getElementById('valueSelect');
        const orientationContainer = document.getElementById('orientationContainer');
        const orientationRadios = document.querySelectorAll('input[name="orientation"]');
        const chartTypeSelect = document.getElementById('chartType');
        const chartContainer = document.getElementById('chart');
        let jsonData = null;

        fileInput.addEventListener('change', handleFileUpload);
        labelSelect.addEventListener('change', renderChart);
        valueSelect.addEventListener('change', renderChart);
        orientationRadios.forEach(radio => radio.addEventListener('change', renderChart));
        chartTypeSelect.addEventListener('change', handleChartTypeChange);

        function handleFileUpload(event) {
            const file = event.target.files[0];
            if (!file) return;
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    jsonData = JSON.parse(e.target.result);

                    // Llenar los selectores con las claves del JSON
                    const keys = Object.keys(jsonData.data[0]);
                    populateSelect(labelSelect, keys);
                    populateSelect(valueSelect, keys);
                    renderChart();
                } catch (error) {
                    document.getElementById('error').textContent = 'Error al leer el archivo JSON.';
                }
            };
            reader.readAsText(file);
        }

        function populateSelect(selectElement, keys) {
            selectElement.innerHTML = '<option value="">--Seleccione una clave--</option>';
            keys.forEach(key => {
                const option = document.createElement('option');
                option.value = key;
                option.textContent = key;
                selectElement.appendChild(option);
            });
        }

        function handleChartTypeChange() {
            const chartType = chartTypeSelect.value;
            if (chartType === 'bar') {
                orientationContainer.style.display = 'block';
            } else {
                orientationContainer.style.display = 'none';
            }
            renderChart();
        }

        function renderChart() {
            if (!jsonData || !labelSelect.value || !valueSelect.value) return;

            const chartType = chartTypeSelect.value;
            const graphWidth = chartType === 'line' ? 900 : 1000;
            const graphHeight = chartType === 'line' ? 500 : 600;

            // Limpia el contenedor de gráficos antes de renderizar
            chartContainer.innerHTML = '';

            const graph = new SVGGraph(graphWidth, graphHeight);
            const selectedLabel = labelSelect.value;
            const selectedValue = valueSelect.value;
            const orientation = document.querySelector('input[name="orientation"]:checked')?.value;

            const data = jsonData.data.map(item => ({
                nombre_pais: item[selectedLabel],
                valor: item[selectedValue]
            }));

            const options = {
                colors: ['#3498db', '#2ecc71', '#e74c3c', '#f39c12', '#8e44ad'],
                orientation: orientation
            };

            // Renderizar el gráfico basado en el tipo seleccionado
            if (chartType === 'bar') {
                if (orientation === 'vertical') {
                    graph.drawBarChart(data, options);
                } else {
                    graph.drawHorizontalBarChart(data, options);
                }
            } else if (chartType === 'line') {
                graph.drawLineChart(data, options);
            } else if (chartType === 'pie') {
                graph.drawPieChart(data, options);
            } else if (chartType === 'radar') {
                graph.drawRadarChart(data, options);
            }

            // Renderizar el SVG en el contenedor
            graph.render('chart');
        }
    </script>
</body>
</html>
